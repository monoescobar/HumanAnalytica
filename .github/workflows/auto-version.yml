name: Auto Version Update

on:
  push:
    branches: [ main ]

jobs:
  update-version:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Get current version and increment
      id: get_version
      run: |
        # Read current version from version.json
        if [ -f "version.json" ]; then
          CURRENT_VERSION=$(cat version.json | grep '"version"' | sed 's/.*"version": *"\([^"]*\)".*/\1/')
        else
          CURRENT_VERSION="000"
        fi
        
        # Increment version
        NEW_VERSION_NUM=$((10#$CURRENT_VERSION + 1))
        NEW_VERSION=$(printf "%03d" $NEW_VERSION_NUM)
        
        echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: v$CURRENT_VERSION"
        echo "New version: v$NEW_VERSION"
    
    - name: Update version files
      run: |
        NEW_VERSION="${{ steps.get_version.outputs.new }}"
        COMMIT_HASH="${{ github.sha }}"
        
        # Update version.json
        cat > version.json << EOF
        {
          "version": "$NEW_VERSION",
          "lastCommit": "$COMMIT_HASH",
          "description": "Dreams and Poems - Auto-versioning system"
        }
        EOF
        
        # Update version in HTML file
        sed -i "s/<span id=\"version-number\" class=\"version-link\">v[0-9]\{3\}<\/span>/<span id=\"version-number\" class=\"version-link\">v$NEW_VERSION<\/span>/g" index.html
        
        echo "Updated version to: v$NEW_VERSION"
    
    - name: Check if version was updated
      id: check_changes
      run: |
        if git diff --quiet; then
          echo "No changes to commit"
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected"
          echo "changes=true" >> $GITHUB_OUTPUT
          git diff --name-only
        fi
    
    - name: Commit version update
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add version.json index.html
        git commit -m "ðŸ”– Auto-update version to v${{ steps.get_version.outputs.new }}"
        git push
